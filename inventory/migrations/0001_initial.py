# Generated by Django 5.2 on 2025-07-12 19:42

import datetime
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BlockedSalesDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="The start date of the blocked period for sales appointments."
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        help_text="The end date of the blocked period (inclusive) for sales appointments."
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Optional description for the blocked period (e.g., 'Public Holiday', 'Staff Training').",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Blocked Sales Date",
                "verbose_name_plural": "Blocked Sales Dates",
                "ordering": ["start_date"],
            },
        ),
        migrations.CreateModel(
            name="InventorySettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enable_depositless_viewing",
                    models.BooleanField(
                        default=True,
                        help_text="Allow customers to submit an appointment request for a motorcycle viewing without requiring a deposit.",
                    ),
                ),
                (
                    "enable_reservation_by_deposit",
                    models.BooleanField(
                        default=True,
                        help_text="Allow customers to reserve a motorcycle by paying a deposit.",
                    ),
                ),
                (
                    "enable_viewing_for_enquiry",
                    models.BooleanField(
                        default=True,
                        help_text="Allow customers to request a specific viewing/appointment date/time within the deposit-less enquiry flow.",
                    ),
                ),
                (
                    "enable_sales_enquiries",
                    models.BooleanField(
                        default=True,
                        help_text="Allow customers to make a general enquiry about a motorcycle.",
                    ),
                ),
                (
                    "deposit_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        help_text="The fixed amount required for a motorcycle reservation deposit.",
                        max_digits=10,
                    ),
                ),
                (
                    "deposit_lifespan_days",
                    models.IntegerField(
                        default=5,
                        help_text="Number of days a deposit holds a motorcycle reservation. After this period, the reservation may expire.",
                    ),
                ),
                (
                    "enable_sales_new_bikes",
                    models.BooleanField(
                        default=True,
                        help_text="Enable the sales process for 'New' motorcycles in the inventory.",
                    ),
                ),
                (
                    "enable_sales_used_bikes",
                    models.BooleanField(
                        default=True,
                        help_text="Enable the sales process for 'Used' and 'Demo' motorcycles in the inventory.",
                    ),
                ),
                (
                    "require_drivers_license",
                    models.BooleanField(
                        default=False,
                        help_text="Require customers to provide driver's license details.",
                    ),
                ),
                (
                    "require_address_info",
                    models.BooleanField(
                        default=False,
                        help_text="Require customers to provide address details.",
                    ),
                ),
                (
                    "sales_booking_open_days",
                    models.CharField(
                        default="Mon,Tue,Wed,Thu,Fri,Sat",
                        help_text="Comma-separated list of days when sales appointments (test drives, viewings) are open.",
                        max_length=255,
                    ),
                ),
                (
                    "sales_appointment_start_time",
                    models.TimeField(
                        default=datetime.time(9, 0),
                        help_text="The earliest time a sales appointment can be scheduled.",
                    ),
                ),
                (
                    "sales_appointment_end_time",
                    models.TimeField(
                        default=datetime.time(17, 0),
                        help_text="The latest time a sales appointment can be scheduled.",
                    ),
                ),
                (
                    "sales_appointment_spacing_mins",
                    models.IntegerField(
                        default=30,
                        help_text="The minimum interval in minutes between two sales appointments on the same day.",
                    ),
                ),
                (
                    "max_advance_booking_days",
                    models.IntegerField(
                        default=90,
                        help_text="Maximum number of days in advance a customer can book a sales appointment.",
                    ),
                ),
                (
                    "min_advance_booking_hours",
                    models.IntegerField(
                        default=24,
                        help_text="Minimum number of hours notice required for a sales appointment.",
                    ),
                ),
                (
                    "send_sales_booking_to_mechanic_desk",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically send sales booking details to the mechanic's desk upon confirmation.",
                    ),
                ),
                (
                    "currency_code",
                    models.CharField(
                        default="AUD",
                        help_text="The three-letter ISO currency code for sales transactions (e.g., AUD, USD).",
                        max_length=3,
                    ),
                ),
                (
                    "currency_symbol",
                    models.CharField(
                        default="$",
                        help_text="The currency symbol for sales transactions (e.g., $).",
                        max_length=5,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Inventory Settings",
                "verbose_name_plural": "Inventory Settings",
            },
        ),
        migrations.CreateModel(
            name="Motorcycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("brand", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
                ("year", models.IntegerField()),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Sale price (if applicable)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        default=1,
                        help_text="Quantity of this motorcycle model in stock. Leave blank for unique used bikes.",
                    ),
                ),
                (
                    "vin_number",
                    models.CharField(
                        blank=True,
                        help_text="Vehicle Identification Number",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "engine_number",
                    models.CharField(
                        blank=True,
                        help_text="Engine number/identifier",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        blank=True,
                        choices=[("new", "New"), ("used", "Used"), ("demo", "Demo")],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("for_sale", "For Sale"),
                            ("sold", "Sold"),
                            ("reserved", "Reserved"),
                            ("unavailable", "Unavailable"),
                        ],
                        default="for_sale",
                        help_text="The sales status of the motorcycle.",
                        max_length=20,
                    ),
                ),
                ("odometer", models.IntegerField(default=0)),
                (
                    "engine_size",
                    models.IntegerField(
                        help_text="Engine size in cubic centimeters (cc)"
                    ),
                ),
                (
                    "seats",
                    models.IntegerField(
                        blank=True,
                        help_text="Number of seats on the motorcycle",
                        null=True,
                    ),
                ),
                (
                    "transmission",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("automatic", "Automatic"),
                            ("manual", "Manual"),
                            ("semi-auto", "Semi-Automatic"),
                        ],
                        help_text="Motorcycle transmission type",
                        max_length=20,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.FileField(blank=True, null=True, upload_to="motorcycles/"),
                ),
                (
                    "youtube_link",
                    models.URLField(
                        blank=True,
                        help_text="An optional link to a YouTube video for this motorcycle.",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("date_posted", models.DateTimeField(auto_now_add=True)),
                (
                    "is_available",
                    models.BooleanField(
                        default=True,
                        help_text="Is this bike generally available for sale?",
                    ),
                ),
                (
                    "rego",
                    models.CharField(
                        blank=True,
                        help_text="Registration number",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "rego_exp",
                    models.DateField(
                        blank=True, help_text="Registration expiration date", null=True
                    ),
                ),
                (
                    "stock_number",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MotorcycleCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, unique=True)),
                ("display_name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Salesfaq",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "booking_step",
                    models.CharField(
                        choices=[
                            ("step1", "Step 1: Your Details"),
                            ("step2", "Step 2: Booking Details & Appointment"),
                            ("step3", "Step 3: Payment"),
                            ("step4", "Step 4: Confirmation"),
                            ("general", "General Sales Pages"),
                        ],
                        help_text="The step in the booking process where this faq should be displayed.",
                        max_length=20,
                    ),
                ),
                (
                    "question",
                    models.CharField(
                        help_text="The frequently asked question.", max_length=255
                    ),
                ),
                ("answer", models.TextField(help_text="The answer to the question.")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this faq is publicly visible.",
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="The order in which the faq appears. Lower numbers are displayed first.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Sales faq",
                "verbose_name_plural": "Sales faqs",
                "ordering": ["booking_step", "display_order", "question"],
            },
        ),
        migrations.CreateModel(
            name="SalesProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the customer.", max_length=100
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address of the customer.", max_length=254
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Phone number of the customer.", max_length=20
                    ),
                ),
                (
                    "address_line_1",
                    models.CharField(
                        blank=True,
                        help_text="Address line 1 (e.g., street number and name).",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True,
                        help_text="Address line 2 (e.g., apartment, suite, unit).",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="City of the customer's address.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        help_text="State, province, or region of the customer's address.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "post_code",
                    models.CharField(
                        blank=True,
                        help_text="Postal code or ZIP code of the customer's address.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="Country of the customer's address.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "drivers_license_image",
                    models.FileField(
                        blank=True,
                        help_text="Image of the customer's driver's license.",
                        null=True,
                        upload_to="drivers_licenses/",
                    ),
                ),
                (
                    "drivers_license_number",
                    models.CharField(
                        blank=True,
                        help_text="Customer's driver's license number.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "drivers_license_expiry",
                    models.DateField(
                        blank=True,
                        help_text="Expiration date of the customer's driver's license.",
                        null=True,
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, help_text="Customer's date of birth.", null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when this sales profile was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when this sales profile was last updated.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sales Profile",
                "verbose_name_plural": "Sales Profiles",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SalesTerms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        default="Website and Online Sales Terms & Conditions\n1. General Website Terms\nThis site is provided as an introduction to this business only, based on general information including that provided by third parties. Information given may change and some time may pass before this website can be updated in respect of all information affected. That being so, this business does not guarantee or warrant that information on this website is accurate or complete and makes no representations or warranties of any kind, express or implied, as to the operation of the site or the information, content or details disclosed on this site.\nExcept as expressly provided for in writing or as regarded by law, the liability of this business arising from the use of this site or the goods and services purchased using this site is specifically excluded and this business disclaims all warranties and any liability for damages of any kind and any liability whether in contract, tort under statute or otherwise for any injury, damage or loss whatsoever. No reliance should be placed on information contained or is to be implied or inferred from this website without checking the details with an authorised officer of this business. Specifications and descriptions are provided by manufacturers.\n\nVehicle Information\nThe information, pictures, colours, and specifications contained within the this business website are presented as a general guide only. Although every effort has been made to ensure that such information is correct and up to date, no warrant is provided that all such information is reliable, complete, accurate or without error. In some cases, pictures of overseas models may be shown as a guide. Therefore, this business does not accept liability for damages of any kind resulting from the access or use of this site and its contents. All vehicles are subject to prior sale. You must contact us to confirm the availability and details of any vehicle.\n\n2. Online Vehicle Reservation & Sales Terms\nIntroduction\nThis business (collectively, “We”, “Our”, or “Us”) offers you the option to submit an enquiry, request a viewing, and/or reserve a Vehicle by paying a deposit online (“Reservation”). Our online system allows you to initiate the purchase process for your chosen Vehicle in your own space and time (“Reservation System”).\nPlacing a Reservation via the Reservation System is only available to Australian residents aged 18 years and over. By using the Reservation System, you agree to the following terms. Before finalising your Reservation, you must carefully read and ACCEPT these Terms and the this business Privacy Policy.\nBy clicking ‘CONFIRM’ and submitting your details and/or payment of the Deposit for your Reservation, you become bound by these Terms. If you do not wish to be bound by these Terms, do not proceed with the Reservation.\nCertain laws such as the Competition and Consumer Act 2010 (Cth) and any applicable state-based consumer legislation (“Consumer Laws”) are in place for your protection. They are designed to ensure Our services are provided with due care and skill and are fit for purpose. These Terms do not alter any protection given to you under Consumer Laws.\n\nDefinitions\nIn these Terms:\n\nAgreement means these Terms and any document expressly referred to in them.\nReservation means an online reservation made by You for a specific Vehicle, which may include requesting a viewing appointment and/or paying a Deposit to secure the Vehicle.\nCustomer means a customer of this business.\nDeposit means the amount payable, including GST, to secure the Reservation of a Vehicle as displayed online.\nFinal Purchase Price means the total advertised price of the Vehicle, including any government duties, fees, and taxes, less any Deposit paid.\nPayment Card means any valid credit card or debit card provided by you.\nPersonal Information has the same meaning as in the Privacy Act 1988 (Cth).\nTerms means these reservation and sales terms and conditions.\nVehicle means the specific new or used vehicle you have made a Reservation for.\nReservation Process\nYou will be guided through a step-by-step process on the Reservation System that enables you to:\n\nSelect a Vehicle.\nProvide your personal and contact information.\nOptionally, request a viewing appointment with us.\nAccept these Terms and Conditions.\nPay the required Deposit to reserve the Vehicle from being sold to another party.\nOnce your Reservation is confirmed and your Deposit is successfully paid, the selected Vehicle will be placed in a \"reserved\" status and will not be available for other customers to purchase online.\n\nConfirming Your Reservation\nOnce your Reservation is confirmed, you will receive an email from us detailing your Reservation and the next steps to complete the purchase.\nManagement of your vehicle purchase is handled by us. You acknowledge that all further steps, including but not limited to finalising finance, arranging a trade-in, completing sale contracts, and arranging final payment and collection, must be made between you and us.\n\nDeposit and Payment Requirements\nIf you select to pay the Deposit online, We use a secure and encrypted online payment gateway.\n\nThe Deposit secures the Vehicle for a period agreed upon with us, preventing its sale to another party.\nThe Deposit is applied towards the Final Purchase Price of the Vehicle.\nThe remaining balance of the Final Purchase Price is payable directly to us prior to the collection of your Vehicle, or as per the terms of your sale contract.\nIf your Deposit payment is rejected, your transaction will be cancelled, and the Vehicle will remain available for sale.\nIf your Vehicle requires any additional accessories or work that falls outside the advertised package, we will contact you to discuss. Any extra costs agreed between you and us are to be paid by you to us.\n\nFulfilling your Reservation (Completing the Sale)\nWe will contact you within a reasonable timeframe after your Reservation is confirmed to arrange the next steps. This may include:\n\nConfirming your viewing appointment (if requested).\nFinalising the contract of sale.\nDiscussing trade-in and finance options.\nArranging final payment and a time for you to take delivery of your Vehicle.\nRescheduling or Cancelling your Reservation\nRescheduling a Viewing Appointment\nIn the event you need to reschedule your viewing appointment, you must contact us directly.\nCancellation by You You may cancel your Reservation at any time by notifying us in writing (including by email).\n\nIf you cancel the Reservation or decide not to proceed with the purchase for any reason, the Deposit is non-refundable and will be forfeited to us to cover administrative and other costs incurred in holding the vehicle for you.\nCancellation by Us\nWe may cancel your Reservation by notifying you in writing (including by email) or by phone prior to the completion of the sale contract. This may occur if the vehicle is found to be damaged, stolen, or otherwise unable to be sold.\n\nIf the Reservation is cancelled by us, any Deposit paid by you will be refunded in full. The refund will be processed through our online refund system to the original Payment Card used.\n3. Privacy, Intellectual Property & Liability\nPrivacy\nThe Personal Information collected in connection with your Reservation is collected by this business. The Personal Information collected by this business will be handled in accordance with this business's Privacy Policy. The terms of this business's Privacy Policy, as updated from time to time, are incorporated into these Terms by reference.\n\nIntellectual Property\nAll information contained in this website is protected by copyright and all of the intellectual property rights in and to the Reservation System belongs to this business and this business's licensors. You are not permitted to copy, distribute, modify, create derivative works, download, store, transmit or reproduce any of the material from this website or the Reservation System without this business's prior written consent.\n\nLiability\nTo the maximum extent permitted by law, all warranties and conditions are expressly excluded from these Terms. Any liability that this business cannot by law exclude in respect of goods and services is limited, where permitted by law, to supplying, or paying the cost of supplying, the goods and services again or repairing, or paying the costs of repairing, the goods, at this business's option.\nThis business and its officers, employees, contractors and agents will not be liable to you, your authorised representative or anyone else for any direct, indirect, incidental or consequential loss of any nature caused by, or any claim which is not attributable (directly or indirectly) to the performance, the failure to perform or the delay in performance of the obligations of this business under these Terms.\n\n4. General\nThis Agreement is governed by and must be construed in accordance with the laws in the State of Western Australia, Australia. You and this business submit to the exclusive jurisdiction of the courts of Western Australia.\nThis business may assign or transfer its rights and obligations under these Terms to another organisation, but this will not affect your rights or this business's obligations under this Agreement or these Terms.\n\nContacting Us\nIf you have a question, problem or complaint or need to contact us for any other reason in relation to your online Reservation or vehicle purchase, please contact us directly."
                    ),
                ),
                (
                    "version_number",
                    models.PositiveIntegerField(blank=True, unique=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Terms and Conditions",
                "verbose_name_plural": "Terms and Conditions",
                "ordering": ["-version_number"],
            },
        ),
        migrations.CreateModel(
            name="TempSalesBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for retrieving the temporary booking.",
                        unique=True,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="The amount paid for this booking (e.g., deposit amount). Defaults to 0.",
                        max_digits=10,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("unpaid", "Unpaid"),
                            ("deposit_paid", "Deposit Paid"),
                            ("paid", "Fully Paid"),
                            ("refunded", "Refunded"),
                        ],
                        default="unpaid",
                        help_text="Current payment status of the temporary booking (e.g., unpaid, deposit_paid).",
                        max_length=20,
                    ),
                ),
                (
                    "booking_status",
                    models.CharField(
                        choices=[
                            ("pending_confirmation", "Pending Confirmation"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("declined", "Declined by Admin"),
                            ("completed", "Completed"),
                            ("no_show", "No Show"),
                            ("declined_refunded", "Declined and Refunded"),
                            ("reserved", "Reserved"),
                            ("enquired", "Enquired"),
                            ("pending_details", "Pending Details"),
                        ],
                        default="pending_details",
                        help_text="Current booking status (e.g., pending_confirmation, confirmed).",
                        max_length=30,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AUD",
                        help_text="The three-letter ISO currency code for the booking (e.g., AUD).",
                        max_length=3,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        blank=True,
                        help_text="The ID of the Stripe Payment Intent associated with this booking, if applicable.",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "appointment_date",
                    models.DateField(
                        blank=True,
                        help_text="Requested date for the test drive or appointment.",
                        null=True,
                    ),
                ),
                (
                    "appointment_time",
                    models.TimeField(
                        blank=True,
                        help_text="Requested time for the test drive or appointment.",
                        null=True,
                    ),
                ),
                (
                    "customer_notes",
                    models.TextField(
                        blank=True,
                        help_text="Any additional notes or messages provided by the customer during the process.",
                        null=True,
                    ),
                ),
                (
                    "terms_accepted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the customer accepted the terms and conditions.",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when this temporary booking was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when this temporary booking was last updated.",
                    ),
                ),
                (
                    "deposit_required_for_flow",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this temporary booking initiated a flow requiring a deposit.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Temporary Sales Booking",
                "verbose_name_plural": "Temporary Sales Bookings",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FeaturedMotorcycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[("new", "New"), ("used", "Used")], max_length=10
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order in which the motorcycle appears. Lower numbers appear first.",
                    ),
                ),
                (
                    "motorcycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="featured_entries",
                        to="inventory.motorcycle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Featured Motorcycle",
                "verbose_name_plural": "Featured Motorcycles",
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="motorcycle",
            name="conditions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Select all applicable conditions (e.g., Used, New, Demo.)",
                related_name="motorcycles",
                to="inventory.motorcyclecondition",
            ),
        ),
        migrations.CreateModel(
            name="MotorcycleImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.FileField(upload_to="motorcycles/additional/")),
                (
                    "motorcycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="inventory.motorcycle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SalesBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sales_booking_reference",
                    models.CharField(
                        blank=True,
                        help_text="A unique reference code for the sales booking.",
                        max_length=20,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="The total amount paid for this booking (e.g., deposit or full payment).",
                        max_digits=10,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("unpaid", "Unpaid"),
                            ("deposit_paid", "Deposit Paid"),
                            ("refunded", "Refunded"),
                        ],
                        default="unpaid",
                        help_text="Current payment status of the booking (e.g., unpaid, deposit_paid, paid).",
                        max_length=20,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AUD",
                        help_text="The three-letter ISO currency code for the booking (e.g., AUD).",
                        max_length=3,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        blank=True,
                        help_text="The ID of the Stripe Payment Intent associated with this booking, if applicable.",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "appointment_date",
                    models.DateField(
                        blank=True,
                        help_text="Confirmed date for the test drive, appointment, or pickup.",
                        null=True,
                    ),
                ),
                (
                    "appointment_time",
                    models.TimeField(
                        blank=True,
                        help_text="Confirmed time for the test drive, appointment, or pickup.",
                        null=True,
                    ),
                ),
                (
                    "booking_status",
                    models.CharField(
                        choices=[
                            ("pending_confirmation", "Pending Confirmation"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("declined", "Declined by Admin"),
                            ("completed", "Completed"),
                            ("no_show", "No Show"),
                            ("declined_refunded", "Declined and Refunded"),
                            ("enquired", "Enquired"),
                        ],
                        default="pending_confirmation",
                        help_text="The current status of the sales booking (e.g., confirmed, reserved, enquired, completed).",
                        max_length=30,
                    ),
                ),
                (
                    "customer_notes",
                    models.TextField(
                        blank=True,
                        help_text="Any additional notes or messages provided by the customer.",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when this sales booking was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when this sales booking was last updated.",
                    ),
                ),
                (
                    "motorcycle",
                    models.ForeignKey(
                        help_text="The motorcycle associated with this sales booking.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sales_bookings",
                        to="inventory.motorcycle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sales Booking",
                "verbose_name_plural": "Sales Bookings",
                "ordering": ["-created_at"],
            },
        ),
    ]
