# Generated by Django 5.2 on 2025-07-17 11:52

import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("payments", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BlockedServiceDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(help_text="The start date of the blocked period."),
                ),
                (
                    "end_date",
                    models.DateField(
                        help_text="The end date of the blocked period (inclusive)."
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Optional description for the blocked period.",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Blocked Service Date",
                "verbose_name_plural": "Blocked Service Dates",
                "ordering": ["start_date"],
            },
        ),
        migrations.CreateModel(
            name="CustomerMotorcycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        help_text="Brand of the motorcycle (e.g., Honda, Yamaha, or 'Other').",
                        max_length=100,
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        help_text="Model year or specific model identifier.",
                        max_length=100,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        help_text="Manufacturing year of the motorcycle."
                    ),
                ),
                (
                    "rego",
                    models.CharField(
                        help_text="Registration number (license plate).", max_length=20
                    ),
                ),
                (
                    "odometer",
                    models.PositiveIntegerField(help_text="Odometer reading in km."),
                ),
                (
                    "transmission",
                    models.CharField(
                        choices=[
                            ("MANUAL", "Manual"),
                            ("AUTOMATIC", "Automatic"),
                            ("SEMI_AUTO", "Semi-Automatic"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "engine_size",
                    models.CharField(
                        help_text="Engine displacement (e.g., 250cc, 1000cc).",
                        max_length=50,
                    ),
                ),
                (
                    "vin_number",
                    models.CharField(
                        blank=True,
                        help_text="(optional) Vehicle Identification Number.",
                        max_length=17,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "engine_number",
                    models.CharField(
                        blank=True,
                        help_text="(optional) Engine serial number.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="(optional) Image of the motorcycle.",
                        null=True,
                        upload_to="motorcycle_images/",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Customer Motorcycle",
                "verbose_name_plural": "Customer Motorcycles",
            },
        ),
        migrations.CreateModel(
            name="ServiceBrand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the service brand (e.g., 'Yamaha', 'Vespa').",
                        max_length=100,
                        unique=True,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Service Brand",
                "verbose_name_plural": "Service Brands",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Servicefaq",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "booking_step",
                    models.CharField(
                        choices=[
                            ("service_page", "Main Service Page"),
                            ("step1", "Step 1: Service Details"),
                            ("step2", "Step 2: Motorcycle Selection"),
                            ("step3", "Step 3: Your Motorcycle Details"),
                            ("step4", "Step 4: Your Profile"),
                            ("step5", "Step 5: Dropoff & Terms"),
                            ("step6", "Step 6: Payment"),
                            ("step7", "Step 7: Confirmation"),
                            ("general", "General Service Pages"),
                        ],
                        help_text="The step in the service booking process where this faq should be displayed.",
                        max_length=20,
                    ),
                ),
                (
                    "question",
                    models.CharField(
                        help_text="The frequently asked question.", max_length=255
                    ),
                ),
                ("answer", models.TextField(help_text="The answer to the question.")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this faq is publicly visible.",
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="The order in which the faq appears. Lower numbers are displayed first.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Service faq",
                "verbose_name_plural": "Service faqs",
                "ordering": ["booking_step", "display_order", "question"],
            },
        ),
        migrations.CreateModel(
            name="ServiceProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the customer.", max_length=100
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address of the customer.", max_length=254
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Phone number of the customer.", max_length=20
                    ),
                ),
                (
                    "address_line_1",
                    models.CharField(help_text="Address line 1.", max_length=100),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True,
                        help_text="Address line 2.",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("city", models.CharField(help_text="City.", max_length=50)),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        help_text="State/Province.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "post_code",
                    models.CharField(help_text="Postal code.", max_length=20),
                ),
                ("country", models.CharField(help_text="Country.", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Service Customer Profile",
                "verbose_name_plural": "Service Customer Profiles",
            },
        ),
        migrations.CreateModel(
            name="ServiceSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "booking_advance_notice",
                    models.IntegerField(
                        default=2,
                        help_text="Minimum number of days notice required for a booking (e.g., 1 for next day).",
                    ),
                ),
                (
                    "max_visible_slots_per_day",
                    models.IntegerField(
                        default=1,
                        help_text="Maximum number of booking slots to show per day in the calendar.",
                    ),
                ),
                (
                    "booking_open_days",
                    models.CharField(
                        default="Mon,Tue,Wed,Thu,Fri",
                        help_text="Comma-separated list of days when bookings are open (e.g., Mon,Tue,Wed,Thu,Fri,Sat,Sun).",
                        max_length=255,
                    ),
                ),
                (
                    "drop_off_start_time",
                    models.TimeField(
                        default=datetime.time(9, 0),
                        help_text="The earliest time customers can drop off their motorcycle.",
                    ),
                ),
                (
                    "drop_off_end_time",
                    models.TimeField(
                        default=datetime.time(17, 0),
                        help_text="The latest time customers can drop off their motorcycle.",
                    ),
                ),
                (
                    "drop_off_spacing_mins",
                    models.IntegerField(
                        default=30,
                        help_text="The minimum interval in minutes between two booking drop offs on the same day.",
                    ),
                ),
                (
                    "max_advance_dropoff_days",
                    models.IntegerField(
                        default=3,
                        help_text="Maximum number of days in advance a customer can drop off their motorcycle before the service date.",
                    ),
                ),
                (
                    "latest_same_day_dropoff_time",
                    models.TimeField(
                        default=datetime.time(12, 0),
                        help_text="The latest time a customer can drop off their motorcycle if the drop-off date is the same as the service date.",
                    ),
                ),
                (
                    "enable_after_hours_dropoff",
                    models.BooleanField(
                        default=False,
                        help_text="Allow customers to drop off their motorcycle outside of standard opening hours (e.g., using a secure drop box).",
                    ),
                ),
                (
                    "after_hours_dropoff_disclaimer",
                    models.TextField(
                        blank=True,
                        help_text="Important disclaimer text displayed to users when after-hours drop-off is selected, outlining risks/conditions.",
                    ),
                ),
                (
                    "after_hours_drop_off_instructions",
                    models.TextField(
                        blank=True,
                        help_text="Instructions for customers on how to use the after-hours drop-off (e.g., key box location, how to secure the vehicle).",
                    ),
                ),
                (
                    "deposit_calc_method",
                    models.CharField(
                        choices=[
                            ("FLAT_FEE", "Flat Fee"),
                            ("PERCENTAGE", "Percentage of Booking Total"),
                        ],
                        default="FLAT_FEE",
                        help_text="Method to calculate the deposit amount.",
                        max_length=20,
                    ),
                ),
                (
                    "deposit_flat_fee_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("50.00"),
                        help_text="Flat fee amount for deposit if 'Flat Fee' method is chosen.",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("1.00"))
                        ],
                    ),
                ),
                (
                    "deposit_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Percentage for deposit if 'Percentage' method is chosen (e.g., 0.1 for 10%).",
                        max_digits=5,
                    ),
                ),
                (
                    "enable_online_full_payment",
                    models.BooleanField(
                        default=False,
                        help_text="Allow customers to pay the full amount online.",
                    ),
                ),
                (
                    "enable_online_deposit",
                    models.BooleanField(
                        default=True,
                        help_text="Allow customers to pay the deposit amount online (if deposits are enabled).",
                    ),
                ),
                (
                    "enable_instore_full_payment",
                    models.BooleanField(
                        default=True,
                        help_text="Allow customers to opt for paying the full amount in-store.",
                    ),
                ),
                (
                    "currency_code",
                    models.CharField(
                        default="AUD",
                        help_text="Currency code (e.g., AUD, USD).",
                        max_length=3,
                    ),
                ),
                (
                    "currency_symbol",
                    models.CharField(
                        default="$",
                        help_text="Currency symbol (e.g., $).",
                        max_length=5,
                    ),
                ),
                (
                    "enable_estimated_pickup_date",
                    models.BooleanField(
                        default=False, verbose_name="Enable Estimated Pick-up Date"
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Settings",
                "verbose_name_plural": "Service Settings",
            },
        ),
        migrations.CreateModel(
            name="ServiceTerms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        default="Online Service Booking Terms\nTERMS OF BOOKING\nIntroduction\nThis business and your authorised dealer, (“Dealer”) (collectively, “We” “Our” or “Us”) offer you the option to book and pay for a service on your Vehicle (including both scheduled and non-scheduled services) online (“Booking”). Our online service booking system lets you book and pay for a service for your Vehicle with your nominated Dealer in your own space and time (“Booking System”). Placing and paying for a Booking via the Booking System is only available to Australian residents aged 18 years and over. By using the Booking System, you agree to the following terms. Before finalising your Booking via the Booking System, you must carefully read and ACCEPT these Terms and the This business Privacy Policy.\nBy clicking ‘CONFIRM’ and submitting payment of the Fees for your Booking, you become bound by these Terms. If you do not wish to be bound by these Terms, do not click ‘CONFIRM’ and submit payment of the Fees.\nCertain laws such as the Competition and Consumer Act 2010 (Cth) and any applicable state-based consumer legislation (“Consumer Laws”) are in place for your protection. They are designed to ensure Our services are provided with due care and skill and are fit for purpose. The Terms do not alter any protection given to you under Consumer Laws.\nThese Terms form part of the agreement between you and the Dealer for provision of a Booking.\nDefinitions\nIn these Terms:\nAdditional Items means optional add-ons, services or accessory fitments in addition to your vehicle’s scheduled or non-scheduled service.\nAgreement means these Terms and any document expressly referred to in them.\nBooking means an online booking made by You for your Vehicle, which may include for a scheduled or non-scheduled service, accessories and/or other Additional Items, through the Booking System available via mobile applications or websites offered by the Dealer and/or This business.\nCustomer means a customer of this business.\nFees means the total price payable, including GST, for the confirmed Booking as displayed online (on the Booking System) or confirmed at the Dealer.\nPayment Card means any valid credit card or debit card provided by you.\nPersonal Information has the same meaning as in the Privacy Act 1988 (Cth).\nTerms means these booking and payment terms and conditions.\nVehicle means the vehicle you have made a Booking for.\nBooking process\nYou will be guided through a step-by-step process on the Booking System that enables you to (but not limited to):\nselect items for Booking, including any optional Additional Items;\nconfirm the Booking; and\npay the Fees online\nIf the Booking consists of a Price on Application (“POA”) item, the Fees may not be eligible for online payment but the Booking itself may still be confirmed.\nSelecting your Vehicle’s service\nPricing of the items are displayed on this business's website and as part of the Booking System.\nConfirming Your Booking\nOnce your Booking is confirmed, you will receive an email from your preferred Dealer detailing next steps.\nManagement of your Booking is handled by your preferred Dealer. You acknowledge that any changes to your Booking, including but not limited to rescheduling and/or cancellation, must be made between you and the Dealer. This business is not responsible for any agreements made between you and the Dealer in relation to the management of your Booking after your Booking has been confirmed.\nPayment Requirements\nIf you select to pay the Fees online when placing your Booking directly via the Booking System, We use a secure and encrypted online payment gateway. Payment methods may be subject to change.\nIf your payment is rejected, you will be invited to RETRY. If your payment is not accepted for any reason, your transaction will be cancelled by Us and you can contact the Dealer.\nWe reserve the right to amend any pricing errors displayed due to human error, computer malfunction or any other reason.\nIf your Vehicle requires unexpected work that falls outside the scope of the items included in the Booking, the Dealer will contact you to discuss. Additional items or work required on your Vehicle may have an extra cost. Any extra costs agreed between you and the Dealer are to be paid by you to the Dealer prior to collection of your Vehicle or as otherwise agreed with the Dealer.\nFulfilling your Booking\nOnce you deliver your Vehicle to your selected Dealer and the Booking is completed by the Dealer, your Dealer will communicate with You to confirm collection of your Vehicle, payment of the Fees and/or any additional amounts (if required), or any further arrangements.\nRescheduling or Cancelling your Booking\nRescheduling your Booking\nIn the event your Booking needs to be rescheduled by the Dealer for any reason, the Dealer will communicate with you in writing (including by email) or by phone as soon as reasonably practicable prior to the Booking date.\nIn the event you need to reschedule your Booking, you must contact the Dealer directly. This business is not responsible for any agreements made between you and the Dealer.\nCancellation by You\nYou may cancel your Booking at any time by notifying the Dealer in writing (including by email) or by phone prior to the Booking date.\nIf the Booking is cancelled by you in the prescribed time and manner, any payments made by you via the Booking System for the Booking (including the Fees) will be refunded in full and processed through our online refund system.\nCancellation by Us\nThe Dealer may cancel your Booking by notifying you either in writing (including by email) or by phone prior to the Booking date.\nIf the Booking is cancelled by the Dealer, any payments made by you via the Booking System for the Booking (including the Fees) will be refunded in full and processed through our online refund system.\nPrivacy\nThe Personal Information collected in connection with your Booking is collected by This business. The Personal Information collected by This business will be handled in accordance with This business's Privacy Policy. The terms of This business's Privacy Policy, as updated from time to time are incorporated into these Terms by reference.\nIntellectual property\nAll information contained in this website is protected by copyright and all of the intellectual property rights in and to the Booking System belongs to This business and This business's licensors.\nYou are not permitted to copy, distribute, modify, create derivative works, download, store, transmit or reproduce any of the material, including but not limited to images, text or other content, from this website or the Booking System without This business's prior written consent, except as follows:\nyou may print or download pages of the website for your own personal, non-commercial use and not for further reproduction, publication, or distribution;\nyour computer may temporarily store copies of such materials in RAM incidental to your accessing and viewing those materials; and\nyou may store files that are automatically cached by your web browser for display enhancement purposes.\nLiability\nAll warranties and conditions are expressly excluded from these Terms to the maximum extent permitted by law. Any liability that This business cannot by law exclude in respect of goods and services is limited, where permitted by law, to supplying, or paying the cost of supplying, the goods and services again or repairing, or paying the costs of repairing, the goods, at This business's option.\nThis business, the Dealer, and their officers, employees, contractors and agents will not be liable to you, your authorised representative or anyone else for any direct, indirect, incidental or consequential loss of any nature caused by, or any claim which is not attributable (directly or indirectly) to the performance, the failure to perform or the delay in performance of the obligations of This business under these Terms. In all other circumstances, liability will be limited to the maximum amount allowable by law.\nGeneral\nThis Agreement is governed by and must be construed in accordance with the laws in the State of Western Australia, Australia. You and This business submit to the exclusive jurisdiction of the courts of Western Australia, and courts competent to determine appeals from those courts, with respect to any proceedings that may be brought at any time relating to this Agreement and these Terms. Neither This business nor you will object to the exercise of jurisdiction of those courts on any basis.\nThis business may engage third parties to supply services for it in connection with the Booking System. However, the engagement of third parties under this clause will not affect This business's rights and obligations under these Terms.\nFailure by either you or This business to enforce a particular term or condition does not constitute a waiver of that term or condition.\nIn the event of any inconsistency between these Terms and terms and conditions contained in any other material relating to the Booking System, these Terms will prevail to the extent of any inconsistency.\nThis business may assign or transfer its rights and obligations under these Terms to another organisation, but this will not affect your rights or This business's obligations under this Agreement or these Terms.\nContacting Us\nIf you have a question, problem or complaint or need to contact us for any other reason, please contact the Dealer.\n"
                    ),
                ),
                (
                    "version_number",
                    models.PositiveIntegerField(blank=True, unique=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Service Terms",
                "verbose_name_plural": "Service Terms",
                "ordering": ["-version_number"],
            },
        ),
        migrations.CreateModel(
            name="ServiceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "estimated_duration",
                    models.IntegerField(
                        help_text="Estimated number of days to complete this service"
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this service is currently offered",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        help_text="Icon image for this service type",
                        null=True,
                        upload_to="service_types/",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Type",
                "verbose_name_plural": "Service Types",
            },
        ),
        migrations.CreateModel(
            name="TempServiceBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for retrieving the temporary booking.",
                        unique=True,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("online_full", "Full Payment Online"),
                            ("online_deposit", "Deposit Payment Online"),
                            ("in_store_full", "Full Payment Store"),
                        ],
                        help_text="The selected payment option for this booking.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "service_date",
                    models.DateField(help_text="Requested date for the service."),
                ),
                (
                    "dropoff_date",
                    models.DateField(
                        blank=True,
                        help_text="Requested date for the drop off.",
                        null=True,
                    ),
                ),
                (
                    "dropoff_time",
                    models.TimeField(
                        blank=True,
                        help_text="Requested drop-off time for the service.",
                        null=True,
                    ),
                ),
                (
                    "estimated_pickup_date",
                    models.DateField(
                        blank=True,
                        help_text="Estimated pickup date set by admin.",
                        null=True,
                    ),
                ),
                (
                    "after_hours_drop_off",
                    models.BooleanField(
                        default=False,
                        help_text="Stores the user's choice for after-hours drop-off.",
                    ),
                ),
                (
                    "customer_notes",
                    models.TextField(
                        blank=True,
                        help_text="Any additional notes from the customer.",
                        null=True,
                    ),
                ),
                (
                    "calculated_deposit_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Calculated deposit amount, if applicable.",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "calculated_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Temporary Service Booking",
                "verbose_name_plural": "Temporary Service Bookings",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ServiceBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_booking_reference",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                (
                    "calculated_total",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "calculated_deposit_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("unpaid", "Unpaid"),
                            ("deposit_paid", "Deposit Paid"),
                            ("paid", "Fully Paid"),
                            ("refunded", "Refunded"),
                        ],
                        default="unpaid",
                        max_length=20,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("online_full", "Full Payment Online"),
                            ("online_deposit", "Deposit Payment Online"),
                            ("in_store_full", "Full Payment Store"),
                        ],
                        help_text="Method by which the payment was made.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AUD",
                        help_text="The three-letter ISO currency code for the booking.",
                        max_length=3,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        blank=True,
                        help_text="The ID of the Stripe Payment Intent associated with this booking.",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "service_date",
                    models.DateField(help_text="Requested date for the service."),
                ),
                (
                    "dropoff_date",
                    models.DateField(help_text="Requested date for the drop off."),
                ),
                (
                    "dropoff_time",
                    models.TimeField(
                        blank=True,
                        help_text="Requested drop-off time for the service.",
                        null=True,
                    ),
                ),
                (
                    "estimated_pickup_date",
                    models.DateField(
                        blank=True,
                        help_text="Estimated pickup date set by admin.",
                        null=True,
                    ),
                ),
                (
                    "after_hours_drop_off",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the customer chose the after-hours drop-off option.",
                    ),
                ),
                (
                    "booking_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("declined", "Declined by Admin"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("no_show", "No Show"),
                            ("DECLINED_REFUNDED", "Declined and Refunded"),
                        ],
                        default="PENDING_CONFIRMATION",
                        max_length=30,
                    ),
                ),
                (
                    "customer_notes",
                    models.TextField(
                        blank=True,
                        help_text="Any additional notes from the customer.",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer_motorcycle",
                    models.ForeignKey(
                        blank=True,
                        help_text="Chosen motorcycle for this service (set in a later step).",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="service_bookings",
                        to="service.customermotorcycle",
                    ),
                ),
                (
                    "payment",
                    models.OneToOneField(
                        blank=True,
                        help_text="Link to the associated payment record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="related_service_booking_payment",
                        to="payments.payment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Booking",
                "verbose_name_plural": "Service Bookings",
                "ordering": ["-created_at"],
            },
        ),
    ]
