# Generated by Django 5.2 on 2025-05-03 13:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CustomerMotorcycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("make", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
                ("year", models.IntegerField()),
                ("vin_number", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "engine_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("rego", models.CharField(blank=True, max_length=20, null=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("odometer", models.IntegerField(blank=True, null=True)),
                (
                    "transmission",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("automatic", "Automatic"),
                            ("manual", "Manual"),
                            ("semi-auto", "Semi-Automatic"),
                        ],
                        help_text="Customer motorcycle transmission type",
                        max_length=20,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(
                        blank=True,
                        help_text="For anonymous bookings",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "customer_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "customer_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("customer_address", models.TextField(blank=True, null=True)),
                (
                    "preferred_contact",
                    models.CharField(
                        blank=True,
                        choices=[("email", "Email"), ("phone", "Phone")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "anon_vehicle_make",
                    models.CharField(
                        blank=True,
                        help_text="Vehicle Make for anonymous bookings",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "anon_vehicle_model",
                    models.CharField(
                        blank=True,
                        help_text="Vehicle Model for anonymous bookings",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "anon_vehicle_year",
                    models.IntegerField(
                        blank=True,
                        help_text="Vehicle Year for anonymous bookings",
                        null=True,
                    ),
                ),
                (
                    "anon_vehicle_rego",
                    models.CharField(
                        blank=True,
                        help_text="Vehicle Registration for anonymous bookings",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "anon_vehicle_odometer",
                    models.IntegerField(
                        blank=True,
                        help_text="Vehicle Odometer for anonymous bookings",
                        null=True,
                    ),
                ),
                (
                    "anon_vehicle_transmission",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("automatic", "Automatic"),
                            ("manual", "Manual"),
                            ("semi-auto", "Semi-Automatic"),
                        ],
                        help_text="Vehicle Transmission for anonymous bookings",
                        max_length=20,
                        null=True,
                    ),
                ),
                ("appointment_date", models.DateTimeField()),
                (
                    "customer_notes",
                    models.TextField(
                        blank=True, help_text="Notes from the customer", null=True
                    ),
                ),
                (
                    "mechanic_notes",
                    models.TextField(
                        blank=True, help_text="Notes from the mechanic", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("no_show", "No Show"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "booking_reference",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                (
                    "parts_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "labor_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "estimated_duration",
                    models.DurationField(
                        help_text="Estimated time to complete this service"
                    ),
                ),
                ("base_price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this service is currently offered",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        help_text="Icon image for this service type",
                        null=True,
                        upload_to="service_types/",
                    ),
                ),
            ],
        ),
    ]
