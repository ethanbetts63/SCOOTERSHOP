# Generated by Django 5.2 on 2025-07-07 14:34

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "inventory",
            "0019_alter_salesfaq_options_alter_salesfaq_booking_step_and_more",
        ),
        ("service", "0013_alter_servicefaq_options_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="The date and time the email was attempted to be sent.",
                    ),
                ),
                (
                    "sender",
                    models.CharField(
                        help_text="The email address from which the email was sent.",
                        max_length=255,
                    ),
                ),
                (
                    "recipient",
                    models.CharField(
                        help_text="The primary recipient's email address.",
                        max_length=255,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        help_text="The subject line of the email.", max_length=255
                    ),
                ),
                (
                    "html_content",
                    models.TextField(
                        blank=True,
                        help_text="The HTML content of the email.",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SENT", "Sent"),
                            ("FAILED", "Failed"),
                            ("PENDING", "Pending"),
                        ],
                        default="PENDING",
                        help_text="The sending status of the email (e.g., Sent, Failed, Pending).",
                        max_length=10,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Any error message if the email sending failed.",
                        null=True,
                    ),
                ),
                (
                    "sales_booking",
                    models.ForeignKey(
                        blank=True,
                        help_text="The sales booking associated with this email, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="related_emails_for_sales",
                        to="inventory.salesbooking",
                    ),
                ),
                (
                    "sales_profile",
                    models.ForeignKey(
                        blank=True,
                        help_text="The sales profile associated with this email, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_emails_for_sales_profile",
                        to="inventory.salesprofile",
                    ),
                ),
                (
                    "service_booking",
                    models.ForeignKey(
                        blank=True,
                        help_text="The service booking associated with this email, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="related_emails_for_service",
                        to="service.servicebooking",
                    ),
                ),
                (
                    "service_profile",
                    models.ForeignKey(
                        blank=True,
                        help_text="The service profile associated with this email, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_emails_for_service_profile",
                        to="service.serviceprofile",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="The registered user associated with this email, if applicable.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_emails",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Log",
                "verbose_name_plural": "Email Logs",
                "ordering": ["-timestamp"],
            },
        ),
    ]
