# Generated by Django 5.2 on 2025-05-30 10:15

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AboutPageContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "intro_text",
                    models.TextField(
                        help_text="Introduction text at the top of the About page"
                    ),
                ),
                ("sales_title", models.CharField(default="Sales", max_length=100)),
                (
                    "sales_content",
                    models.TextField(help_text="Content for the Sales section"),
                ),
                (
                    "sales_image",
                    models.FileField(
                        blank=True,
                        help_text="Image for the Sales section",
                        null=True,
                        upload_to="about/",
                    ),
                ),
                ("service_title", models.CharField(default="Service", max_length=100)),
                (
                    "service_content",
                    models.TextField(help_text="Content for the Service section"),
                ),
                (
                    "service_image",
                    models.FileField(
                        blank=True,
                        help_text="Image for the Service section",
                        null=True,
                        upload_to="about/",
                    ),
                ),
                (
                    "parts_title",
                    models.CharField(default="Parts & Accessories", max_length=100),
                ),
                (
                    "parts_content",
                    models.TextField(
                        help_text="Content for the Parts & Accessories section"
                    ),
                ),
                (
                    "parts_image",
                    models.FileField(
                        blank=True,
                        help_text="Image for the Parts section",
                        null=True,
                        upload_to="about/",
                    ),
                ),
                (
                    "cta_text",
                    models.TextField(
                        help_text="Call to action text at the bottom of the page"
                    ),
                ),
            ],
            options={
                "verbose_name": "About Page Content",
                "verbose_name_plural": "About Page Content",
            },
        ),
        migrations.CreateModel(
            name="BlockedHireDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(help_text="The start date of the blocked period."),
                ),
                (
                    "end_date",
                    models.DateField(
                        help_text="The end date of the blocked period (inclusive)."
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Optional description for the blocked period.",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Blocked Hire Date",
                "verbose_name_plural": "Blocked Hire Dates",
                "ordering": ["start_date"],
            },
        ),
        migrations.CreateModel(
            name="BlockedServiceDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(help_text="The start date of the blocked period."),
                ),
                (
                    "end_date",
                    models.DateField(
                        help_text="The end date of the blocked period (inclusive)."
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Optional description for the blocked period.",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Blocked Service Date",
                "verbose_name_plural": "Blocked Service Dates",
                "ordering": ["start_date"],
            },
        ),
        migrations.CreateModel(
            name="HireSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "default_hourly_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Default hourly rate for bikes if no custom rate is set (optional).",
                        max_digits=8,
                    ),
                ),
                (
                    "default_daily_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Default daily rate for bikes if no custom rate is set.",
                        max_digits=8,
                    ),
                ),
                (
                    "weekly_discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Discount percentage for hires of 7 days or more.",
                        max_digits=5,
                    ),
                ),
                (
                    "monthly_discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Discount percentage for hires of 30 days or more.",
                        max_digits=5,
                    ),
                ),
                (
                    "enable_online_full_payment",
                    models.BooleanField(
                        default=False,
                        help_text="Allow customers to pay the full amount online.",
                    ),
                ),
                (
                    "enable_online_deposit_payment",
                    models.BooleanField(
                        default=False,
                        help_text="Allow customers to pay a deposit online.",
                    ),
                ),
                (
                    "enable_in_store_full_payment",
                    models.BooleanField(
                        default=False,
                        help_text="Allow customers to pay the full amount in store.",
                    ),
                ),
                (
                    "deposit_enabled",
                    models.BooleanField(
                        default=False,
                        help_text="If enabled, customers can book by paying a deposit instead of the full amount upfront.",
                    ),
                ),
                (
                    "default_deposit_calculation_method",
                    models.CharField(
                        choices=[
                            ("percentage", "Percentage of Total"),
                            ("fixed", "Fixed Amount"),
                        ],
                        default="percentage",
                        help_text="How the default deposit is calculated when enabled.",
                        max_length=10,
                    ),
                ),
                (
                    "deposit_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=10.0,
                        help_text="Default percentage for deposit calculation.",
                        max_digits=5,
                    ),
                ),
                (
                    "deposit_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        help_text="Default fixed amount for deposit calculation.",
                        max_digits=8,
                    ),
                ),
                (
                    "add_ons_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Enable the option for customers to add individual add-ons.",
                    ),
                ),
                (
                    "packages_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Enable the option for customers to select add-on packages.",
                    ),
                ),
                (
                    "minimum_hire_duration_hours",
                    models.PositiveIntegerField(
                        default=2,
                        help_text="Minimum duration for a hire booking in hours.",
                    ),
                ),
                (
                    "booking_lead_time_hours",
                    models.PositiveIntegerField(
                        default=2,
                        help_text="Minimum hours required between booking time and pickup time.",
                    ),
                ),
                (
                    "grace_period_minutes",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Grace period after return time before late fees apply.",
                    ),
                ),
                (
                    "pick_up_start_time",
                    models.TimeField(
                        default=datetime.time(9, 0),
                        help_text="Earliest time of day for service pickups (e.g., 09:00)",
                    ),
                ),
                (
                    "pick_up_end_time",
                    models.TimeField(
                        default=datetime.time(17, 0),
                        help_text="Latest time of day for service pickups (e.g., 17:00)",
                    ),
                ),
                (
                    "return_off_start_time",
                    models.TimeField(
                        default=datetime.time(9, 0),
                        help_text="Earliest time of day for service returns (e.g., 09:00)",
                    ),
                ),
                (
                    "return_end_time",
                    models.TimeField(
                        default=datetime.time(17, 0),
                        help_text="Latest time of day for service returns (e.g., 17:00)",
                    ),
                ),
                (
                    "maximum_hire_duration_days",
                    models.IntegerField(
                        default=30,
                        help_text="Maximum number of days for a hire booking",
                    ),
                ),
                (
                    "hire_confirmation_email_subject",
                    models.CharField(
                        default="Your motorcycle hire booking has been confirmed",
                        help_text="Subject line for hire booking confirmation emails",
                        max_length=200,
                    ),
                ),
                (
                    "admin_hire_notification_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email address for hire booking notifications",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "hire_pricing_strategy",
                    models.CharField(
                        choices=[
                            (
                                "flat_24_hour",
                                "Flat 24-Hour Billing (Any excess rounds to full day)",
                            ),
                            (
                                "24_hour_plus_margin",
                                "24-Hour Billing with Margin (Excess hours within margin are free, then full day)",
                            ),
                            (
                                "24_hour_customer_friendly",
                                "24-Hour Billing Friendly (Excess hours are billed at hourly rate or day rate, whichever is lower)",
                            ),
                            (
                                "daily_plus_excess_hourly",
                                "Daily Rate + Excess Hourly (Every additional hour charged hourly)",
                            ),
                            (
                                "daily_plus_proportional_excess",
                                "Daily Rate + Proportional Excess (Excess hours billed as percentage of daily rate)",
                            ),
                            (
                                "24_hour_plus_margin_proportional",
                                "24-Hour Billing with Margin + Proportional (Excess hours beyond margin are proportional)",
                            ),
                        ],
                        default="24_hour_customer_friendly",
                        help_text="Defines how multi-day hire prices are calculated.",
                        max_length=50,
                    ),
                ),
                (
                    "excess_hours_margin",
                    models.PositiveIntegerField(
                        default=2,
                        help_text="For '24-Hour Billing with Margin' strategy: number of excess hours allowed before charging for a full day.",
                    ),
                ),
                (
                    "late_fee_per_day",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Fee charged per full day for late returns (if applicable).",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "enable_cleaning_fee",
                    models.BooleanField(
                        default=False,
                        help_text="Enable the option to charge a cleaning fee.",
                    ),
                ),
                (
                    "default_cleaning_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Default amount for a cleaning fee.",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "minimum_driver_age",
                    models.PositiveIntegerField(
                        default=18, help_text="Minimum age required to be a driver."
                    ),
                ),
                (
                    "young_driver_surcharge_age_limit",
                    models.PositiveIntegerField(
                        default=25,
                        help_text="Age limit below which a young driver surcharge might apply.",
                    ),
                ),
                (
                    "require_driver_license_upload",
                    models.BooleanField(
                        default=False,
                        help_text="Require customers to upload driver license copies during booking.",
                    ),
                ),
                (
                    "currency_code",
                    models.CharField(
                        default="AUD",
                        help_text="The primary currency code (ISO 4217) for all prices and calculations.",
                        max_length=3,
                    ),
                ),
                (
                    "currency_symbol",
                    models.CharField(
                        default="$", help_text="Symbol for the currency.", max_length=5
                    ),
                ),
                (
                    "cancellation_upfront_full_refund_days",
                    models.PositiveIntegerField(
                        default=7,
                        help_text="Full refund if cancelled this many *full days* or more before pickup time (for upfront payments).",
                    ),
                ),
                (
                    "cancellation_upfront_partial_refund_days",
                    models.PositiveIntegerField(
                        default=3,
                        help_text="Partial refund if cancelled this many *full days* or more (but less than full refund threshold) before pickup time (for upfront payments).",
                    ),
                ),
                (
                    "cancellation_upfront_partial_refund_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        help_text="Percentage of total hire price to refund for partial cancellations (for upfront payments).",
                        max_digits=5,
                    ),
                ),
                (
                    "cancellation_upfront_minimal_refund_days",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Minimal refund percentage applies if cancelled this many *full days* or more (but less than partial refund threshold) before pickup time (for upfront payments).",
                    ),
                ),
                (
                    "cancellation_upfront_minimal_refund_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Percentage of total hire price to refund for late cancellations (for upfront payments).",
                        max_digits=5,
                    ),
                ),
                (
                    "cancellation_deposit_full_refund_days",
                    models.PositiveIntegerField(
                        default=7,
                        help_text="Full refund of deposit if cancelled this many *full days* or more before pickup time.",
                    ),
                ),
                (
                    "cancellation_deposit_partial_refund_days",
                    models.PositiveIntegerField(
                        default=3,
                        help_text="Partial refund of deposit if cancelled this many *full days* or more (but less than full refund threshold) before pickup time.",
                    ),
                ),
                (
                    "cancellation_deposit_partial_refund_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        help_text="Percentage of deposit to refund for partial cancellations.",
                        max_digits=5,
                    ),
                ),
                (
                    "cancellation_deposit_minimal_refund_days",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Minimal refund percentage applies to deposit if cancelled this many *full days* or more (but less than partial refund threshold) before pickup time.",
                    ),
                ),
                (
                    "cancellation_deposit_minimal_refund_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Percentage of deposit to refund for late cancellations.",
                        max_digits=5,
                    ),
                ),
            ],
            options={
                "verbose_name": "Hire Settings",
                "verbose_name_plural": "Hire Settings",
            },
        ),
        migrations.CreateModel(
            name="ServiceBrand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the service brand (e.g., 'Yamaha', 'Vespa').",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Check if this is a primary brand to display prominently (limited to 5 total).",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Optional image for primary brands. Only used if 'Is Primary' is checked.",
                        null=True,
                        upload_to="brands/",
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Service Brand",
                "verbose_name_plural": "Service Brands",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SiteSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enable_sales_new",
                    models.BooleanField(
                        default=True, help_text="Enable new motorcycle sales"
                    ),
                ),
                (
                    "enable_sales_used",
                    models.BooleanField(
                        default=True, help_text="Enable used motorcycle sales"
                    ),
                ),
                (
                    "enable_hire",
                    models.BooleanField(
                        default=True, help_text="Enable motorcycle hire services"
                    ),
                ),
                (
                    "enable_service_booking",
                    models.BooleanField(
                        default=True, help_text="Enable service booking functionality"
                    ),
                ),
                (
                    "enable_user_accounts",
                    models.BooleanField(
                        default=True, help_text="Enable user account registration"
                    ),
                ),
                (
                    "enable_contact_page",
                    models.BooleanField(
                        default=True, help_text="Enable the contact us page"
                    ),
                ),
                (
                    "enable_about_page",
                    models.BooleanField(
                        default=True, help_text="Enable the about us page"
                    ),
                ),
                (
                    "enable_map_display",
                    models.BooleanField(
                        default=True,
                        help_text="Enable displaying a map (e.g., location map)",
                    ),
                ),
                (
                    "enable_featured_section",
                    models.BooleanField(
                        default=True,
                        help_text="Enable a featured items or content section",
                    ),
                ),
                (
                    "enable_privacy_policy_page",
                    models.BooleanField(
                        default=True, help_text="Enable the privacy policy page"
                    ),
                ),
                (
                    "enable_returns_page",
                    models.BooleanField(
                        default=True, help_text="Enable the returns page"
                    ),
                ),
                (
                    "enable_security_page",
                    models.BooleanField(
                        default=True, help_text="Enable the security page"
                    ),
                ),
                (
                    "enable_terms_page",
                    models.BooleanField(
                        default=True, help_text="Enable the terms and conditions page"
                    ),
                ),
                (
                    "enable_google_places_reviews",
                    models.BooleanField(
                        default=True,
                        help_text="Enable displaying Google Places reviews",
                    ),
                ),
                (
                    "allow_anonymous_bookings",
                    models.BooleanField(
                        default=True,
                        help_text="Allow service bookings without an account",
                    ),
                ),
                (
                    "allow_account_bookings",
                    models.BooleanField(
                        default=True, help_text="Allow service bookings with an account"
                    ),
                ),
                (
                    "booking_open_days",
                    models.IntegerField(
                        default=60,
                        help_text="Number of days in advance that bookings can be made",
                    ),
                ),
                (
                    "drop_off_start_time",
                    models.TimeField(
                        default=datetime.time(9, 0),
                        help_text="Earliest time of day for service drop-offs (e.g., 09:00)",
                    ),
                ),
                (
                    "drop_off_end_time",
                    models.TimeField(
                        default=datetime.time(17, 0),
                        help_text="Latest time of day for service drop-offs (e.g., 17:00)",
                    ),
                ),
                (
                    "booking_advance_notice",
                    models.IntegerField(
                        default=1,
                        help_text="Minimum number of days notice required for a booking",
                    ),
                ),
                (
                    "max_visible_slots_per_day",
                    models.IntegerField(
                        default=6,
                        help_text="Maximum number of booking slots to show per day",
                    ),
                ),
                (
                    "service_confirmation_email_subject",
                    models.CharField(
                        default="Your service booking has been confirmed",
                        max_length=200,
                    ),
                ),
                (
                    "service_pending_email_subject",
                    models.CharField(
                        default="Your service booking request has been received",
                        max_length=200,
                    ),
                ),
                (
                    "admin_service_notification_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email address for service booking notifications",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "display_new_prices",
                    models.BooleanField(
                        default=True, help_text="Display prices for new motorcycles"
                    ),
                ),
                (
                    "display_used_prices",
                    models.BooleanField(
                        default=True, help_text="Display prices for used motorcycles"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, default="(08) 9433 4613", max_length=20, null=True
                    ),
                ),
                (
                    "email_address",
                    models.EmailField(
                        blank=True,
                        default="admin@scootershop.com.au",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "storefront_address",
                    models.TextField(
                        blank=True,
                        default="Unit 2/95 Queen Victoria St, Fremantle WA, Australia",
                        null=True,
                    ),
                ),
                (
                    "google_places_place_id",
                    models.CharField(
                        blank=True,
                        default="ChIJy_zrHmGhMioRisz6mis0SpQ",
                        help_text="Google Places Place ID for the storefront location",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_monday",
                    models.CharField(
                        blank=True,
                        default="10:30am to 5:00pm",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_tuesday",
                    models.CharField(
                        blank=True,
                        default="10:30am to 5:00pm",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_wednesday",
                    models.CharField(
                        blank=True,
                        default="10:30am to 5:00pm",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_thursday",
                    models.CharField(
                        blank=True,
                        default="10:30am to 5:00pm",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_friday",
                    models.CharField(
                        blank=True,
                        default="10:30am to 5:00pm",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_saturday",
                    models.CharField(
                        blank=True,
                        default="10:30am to 1:00pm (By Appointment only)",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_sunday",
                    models.CharField(
                        blank=True,
                        default="Closed",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Site Settings",
                "verbose_name_plural": "Site Settings",
            },
        ),
    ]
