# Generated by Django 5.2 on 2025-07-15 19:46

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="GoogleMyBusinessAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "account_id",
                    models.CharField(
                        blank=True,
                        help_text="Your GMB Account ID.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "location_id",
                    models.CharField(
                        blank=True,
                        help_text="The ID of the specific business location.",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("access_token", models.TextField(blank=True, null=True)),
                ("refresh_token", models.TextField(blank=True, null=True)),
                ("token_expiry", models.DateTimeField(blank=True, null=True)),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Google My Business Account",
                "verbose_name_plural": "Google My Business Accounts",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "author_name",
                    models.CharField(
                        help_text="The name of the person who wrote the review.",
                        max_length=255,
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        help_text="Rating from 1 to 5.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("text", models.TextField(help_text="The content of the review.")),
                (
                    "profile_photo_url",
                    models.URLField(
                        blank=True,
                        help_text="Optional URL to the reviewer's profile picture.",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order in which the review is displayed. Lower numbers are shown first.",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Only active reviews will be displayed on the site.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Display Review",
                "verbose_name_plural": "Display Reviews",
                "ordering": ["display_order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SiteSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enable_sales_new",
                    models.BooleanField(
                        default=True, help_text="Enable new motorcycle sales"
                    ),
                ),
                (
                    "enable_sales_used",
                    models.BooleanField(
                        default=True, help_text="Enable used motorcycle sales"
                    ),
                ),
                (
                    "enable_service_booking",
                    models.BooleanField(
                        default=True, help_text="Enable service booking functionality"
                    ),
                ),
                (
                    "enable_contact_page",
                    models.BooleanField(
                        default=True, help_text="Enable the contact us page"
                    ),
                ),
                (
                    "enable_map_display",
                    models.BooleanField(
                        default=True,
                        help_text="Enable displaying a map (e.g., location map)",
                    ),
                ),
                (
                    "enable_privacy_policy_page",
                    models.BooleanField(
                        default=True, help_text="Enable the privacy policy page"
                    ),
                ),
                (
                    "enable_returns_page",
                    models.BooleanField(
                        default=True, help_text="Enable the returns page"
                    ),
                ),
                (
                    "enable_security_page",
                    models.BooleanField(
                        default=True, help_text="Enable the security page"
                    ),
                ),
                (
                    "enable_google_places_reviews",
                    models.BooleanField(
                        default=True,
                        help_text="Enable displaying Google Places reviews",
                    ),
                ),
                (
                    "enable_user_accounts",
                    models.BooleanField(
                        default=True, help_text="Enable user account registration"
                    ),
                ),
                (
                    "display_phone_number",
                    models.BooleanField(
                        default=False,
                        help_text="Display the phone number on the website.",
                    ),
                ),
                (
                    "display_address",
                    models.BooleanField(
                        default=True,
                        help_text="Display the storefront address on the website.",
                    ),
                ),
                (
                    "display_opening_hours",
                    models.BooleanField(
                        default=True,
                        help_text="Display the opening hours on the website.",
                    ),
                ),
                (
                    "enable_faq_service",
                    models.BooleanField(
                        default=True, help_text="Enable the faq section for services."
                    ),
                ),
                (
                    "enable_faq_sales",
                    models.BooleanField(
                        default=True, help_text="Enable the faq section for sales."
                    ),
                ),
                (
                    "enable_refunds",
                    models.BooleanField(
                        default=False, help_text="Enable the refunds page."
                    ),
                ),
                (
                    "enable_motorcycle_mover",
                    models.BooleanField(
                        default=True, help_text="Enable the motorcycle mover section."
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, default="(08) 9433 4613", max_length=20, null=True
                    ),
                ),
                (
                    "email_address",
                    models.EmailField(
                        blank=True,
                        default="admin@scootershop.com.au",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "street_address",
                    models.CharField(
                        blank=True,
                        default="Unit 2/95 Queen Victoria St",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "address_locality",
                    models.CharField(
                        blank=True, default="Fremantle", max_length=100, null=True
                    ),
                ),
                (
                    "address_region",
                    models.CharField(
                        blank=True, default="WA", max_length=100, null=True
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, default="6160", max_length=20, null=True
                    ),
                ),
                (
                    "google_places_place_id",
                    models.CharField(
                        blank=True,
                        default="ChIJy_zrHmGhMioRisz6mis0SpQ",
                        help_text="Google Places Place ID for the storefront location",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "youtube_link",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "instagram_link",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "facebook_link",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "opening_hours_monday",
                    models.CharField(
                        blank=True,
                        default="By Appointment Only",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_tuesday",
                    models.CharField(
                        blank=True,
                        default="By Appointment Only",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_wednesday",
                    models.CharField(
                        blank=True,
                        default="By Appointment Only",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_thursday",
                    models.CharField(
                        blank=True,
                        default="By Appointment Only",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_friday",
                    models.CharField(
                        blank=True,
                        default="By Appointment Only",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_saturday",
                    models.CharField(
                        blank=True,
                        default="By Appointment Only",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "opening_hours_sunday",
                    models.CharField(
                        blank=True,
                        default="By Appointment Only",
                        help_text="e.g. '9:00 AM - 5:00 PM' or 'Closed'",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Site Settings",
                "verbose_name_plural": "Site Settings",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("message", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_cleared", models.BooleanField(default=False)),
                (
                    "content_type",
                    models.ForeignKey(
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "inventory"), ("model", "salesbooking")
                            ),
                            models.Q(
                                ("app_label", "service"), ("model", "servicebooking")
                            ),
                            models.Q(("app_label", "core"), ("model", "enquiry")),
                            models.Q(
                                ("app_label", "refunds"), ("model", "refundrequest")
                            ),
                            models.Q(
                                ("app_label", "refunds"), ("model", "refundsettings")
                            ),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "ordering": ["-created_at"],
            },
        ),
    ]
