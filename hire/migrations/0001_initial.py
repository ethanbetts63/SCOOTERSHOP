# Generated by Django 5.1.6 on 2025-05-15 09:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("inventory", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AddOn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the add-on (e.g., 'GPS', 'Helmet', 'Insurance').",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the add-on.", null=True
                    ),
                ),
                (
                    "price_type",
                    models.CharField(
                        choices=[
                            ("per_booking", "Per Booking"),
                            ("per_day", "Per Day"),
                            ("per_item", "Per Item"),
                        ],
                        default="per_booking",
                        help_text="How the add-on is priced.",
                        max_length=20,
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost of the add-on based on the price type.",
                        max_digits=8,
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True,
                        help_text="Is this add-on currently available for booking?",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Hire Add-On",
                "verbose_name_plural": "Hire Add-Ons",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BookingAddOn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="The quantity of this add-on included in the booking.",
                    ),
                ),
                (
                    "booked_addon_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price of one unit of this add-on at the time of booking.",
                        max_digits=8,
                    ),
                ),
                (
                    "addon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addon_bookings",
                        to="hire.addon",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DriverProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the driver.", max_length=100
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Email address of the driver.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Phone number of the driver.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True,
                        help_text="Physical address of the driver.",
                        null=True,
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, help_text="Date of birth of the driver.", null=True
                    ),
                ),
                (
                    "license_number",
                    models.CharField(
                        blank=True,
                        help_text="Driver's license number.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "license_issuing_country",
                    models.CharField(
                        blank=True,
                        help_text="Country that issued the license.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "license_expiry_date",
                    models.DateField(
                        blank=True, help_text="Expiry date of the license.", null=True
                    ),
                ),
                (
                    "license_photo",
                    models.FileField(
                        blank=True,
                        help_text="Upload of the driver's primary license.",
                        null=True,
                        upload_to="driver_profiles/licenses/",
                    ),
                ),
                (
                    "international_license_photo",
                    models.FileField(
                        blank=True,
                        help_text="Upload of the International Driver's License (if required).",
                        null=True,
                        upload_to="driver_profiles/international_licenses/",
                    ),
                ),
                (
                    "international_license_required",
                    models.BooleanField(
                        default=False,
                        help_text="Is an International Driver's License required for this driver?",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="driver_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Driver Profile",
                "verbose_name_plural": "Driver Profiles",
                "ordering": ["name", "email"],
            },
        ),
        migrations.CreateModel(
            name="HireBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "booked_package_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Price of the selected package at the time of booking.",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("pickup_date", models.DateField(help_text="Pickup date")),
                ("pickup_time", models.TimeField(help_text="Pickup time")),
                ("return_date", models.DateField(help_text="Return date")),
                ("return_time", models.TimeField(help_text="Return time")),
                (
                    "booking_reference",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                (
                    "is_international_booking",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the booking requires international documentation/considerations.",
                    ),
                ),
                (
                    "booked_daily_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "booked_weekly_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "booked_monthly_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "deposit_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("unpaid", "Unpaid"),
                            ("deposit_paid", "Deposit Paid"),
                            ("paid", "Fully Paid"),
                            ("refunded", "Refunded"),
                        ],
                        default="unpaid",
                        max_length=20,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cash", "Cash"),
                            ("card", "Card"),
                            ("online", "Online"),
                            ("at_desk", "At Desk (Pending Payment)"),
                            ("other", "Other"),
                        ],
                        help_text="Method by which the payment was made.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("no_show", "No Show"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("customer_notes", models.TextField(blank=True, null=True)),
                ("internal_notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "add_ons",
                    models.ManyToManyField(
                        blank=True,
                        related_name="hire_bookings",
                        through="hire.BookingAddOn",
                        to="hire.addon",
                    ),
                ),
                (
                    "driver_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hire_bookings",
                        to="hire.driverprofile",
                    ),
                ),
                (
                    "motorcycle",
                    models.ForeignKey(
                        limit_choices_to={"conditions__name": "hire"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hire_bookings",
                        to="inventory.motorcycle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Hire Booking",
                "verbose_name_plural": "Hire Bookings",
                "ordering": ["pickup_date", "pickup_time", "motorcycle"],
            },
        ),
        migrations.AddField(
            model_name="bookingaddon",
            name="booking",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="booking_addons",
                to="hire.hirebooking",
            ),
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the package.", max_length=100),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the package.", null=True
                    ),
                ),
                (
                    "package_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="The current price of this package bundle.",
                        max_digits=10,
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True,
                        help_text="Is this package currently available for booking?",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "add_ons",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select the individual add-ons included in this package.",
                        related_name="packages",
                        to="hire.addon",
                    ),
                ),
            ],
            options={
                "verbose_name": "Hire Package",
                "verbose_name_plural": "Hire Packages",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="hirebooking",
            name="package",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="hire_bookings",
                to="hire.package",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="bookingaddon",
            unique_together={("booking", "addon")},
        ),
    ]
