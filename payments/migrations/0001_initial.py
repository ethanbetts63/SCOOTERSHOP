# Generated by Django 5.2 on 2025-05-31 11:30

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("hire", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        blank=True,
                        help_text="The ID of the Stripe Payment Intent object.",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "stripe_payment_method_id",
                    models.CharField(
                        blank=True,
                        help_text="The ID of the Stripe Payment Method used for this payment.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="The amount of the payment.",
                        max_digits=10,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AUD",
                        help_text="The three-letter ISO currency code (e.g., 'usd', 'AUD').",
                        max_length=3,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        default="requires_payment_method",
                        help_text="The current status of the Stripe Payment Intent (e.g., 'succeeded', 'requires_action').",
                        max_length=50,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A description for the payment, often sent to Stripe.",
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Arbitrary key-value pairs for additional payment information or Stripe metadata.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "stripe_event_id",
                    models.CharField(
                        db_index=True,
                        help_text="The unique ID of the Stripe webhook event (e.g., 'evt_...').",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        help_text="The type of the Stripe event.", max_length=100
                    ),
                ),
                (
                    "received_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The timestamp when the webhook event was received and recorded.",
                    ),
                ),
                (
                    "payload",
                    models.JSONField(
                        blank=True,
                        help_text="The full JSON payload of the Stripe webhook event.",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Stripe Webhook Event",
                "verbose_name_plural": "Stripe Webhook Events",
                "ordering": ["-received_at"],
            },
        ),
        migrations.CreateModel(
            name="HireRefundRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True,
                        help_text="Customer's reason for requesting the refund.",
                    ),
                ),
                (
                    "requested_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the request was submitted.",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unverified", "Unverified - Awaiting Email Confirmation"),
                            ("pending", "Pending Review"),
                            ("approved", "Approved - Awaiting Refund"),
                            ("rejected", "Rejected"),
                            ("refunded", "Refunded"),
                            ("failed", "Refund Failed"),
                        ],
                        default="unverified",
                        help_text="Current status of the refund request.",
                        max_length=20,
                    ),
                ),
                (
                    "amount_to_refund",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="The amount to be refunded, set by staff upon approval (can be partial).",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when the request was processed by staff.",
                        null=True,
                    ),
                ),
                (
                    "staff_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes from staff regarding the processing of this request.",
                    ),
                ),
                (
                    "stripe_refund_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Refund ID if the refund was processed via Stripe.",
                        max_length=255,
                    ),
                ),
                (
                    "is_admin_initiated",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this refund request was initiated by an administrator.",
                    ),
                ),
                (
                    "refund_calculation_details",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stores a snapshot of details used for refund calculation (e.g., policy applied, original amount, calculated refund amount).",
                    ),
                ),
                (
                    "request_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email address provided by the user for this refund request.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "driver_profile",
                    models.ForeignKey(
                        blank=True,
                        help_text="The driver profile associated with this refund.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="refund_requests_related_driver",
                        to="hire.driverprofile",
                    ),
                ),
                (
                    "hire_booking",
                    models.ForeignKey(
                        help_text="The booking for which the refund is requested.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refund_requests",
                        to="hire.hirebooking",
                    ),
                ),
            ],
            options={
                "verbose_name": "Hire Refund Request",
                "verbose_name_plural": "Hire Refund Requests",
                "ordering": ["-requested_at"],
            },
        ),
    ]
